<!DOCTYPE HTML>
<html>
	<head>
	    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=10" />
		<title>Log Chart</title>        

	    <script src="./js/jquery.min.js"></script>        
	    <script src="./js/require.js"></script>     
        
		<style>
		    body { font: 12px Arial;}

		    path { 
		        stroke: steelblue;
		        stroke-width: 2;
		        fill: none;
		    }            
            
		    .axis path,
		    .axis line {
		        fill: none;
		        stroke: grey;
		        stroke-width: 1;
		        shape-rendering: crispEdges;
		    }

		    .brush .extent {
		        stroke: #fff;
		        fill-opacity: .125;
		        shape-rendering: crispEdges;
		    }		    
		</style>

		<script type="text/javascript">
		    "use strict";

		    $(function () {

		        requirejs.config({
		            "baseUrl": "./js",
		            "paths": { "app": "./app", 'moment':'./moment.min' }
		        });


		        require(['app/d3.chart'], function (d3Chart) {
		            d3Chart.init({ container: '#container', xDim: 'DateTime' });
		            d3Chart.addGraph({ id: 'Speed', type:'log', name: 'Speed', dataId: 512, yVal: ['Value'], data: speedData });
		            d3Chart.addGraph({ id: 'RPM', type: 'log', name: 'RPM', dataId: 513, yVal: ['Value'], data: rpmData });
		            
		            d3Chart.addGraph({ id: 'DI', type: 'di', name: 'Digital Input', dataId: 522, data: diData });

		            d3Chart.addGraph({ id: 'Accel', type: 'log', name: 'Accel', dataId: 522, yVal: ['X', 'Y', 'Z'], data: accelData });
		            		            

		            setTimeout(function () {	
		                d3Chart.reorderGraph('Accel', 'up');
		                
		                window.setTimeout(function () {
		                    d3Chart.removeGraph('RPM');
		                }, 2000);
		                
		            }, 3000);


		            //d3Chart.render();
		        });

		    });

		</script>
	</head>
	<body>
	    <script src="./js/data/chartdata_test.js"></script>

	    <div id="container"></div>
        
        <h2>Shows How we can roll our own charting component for very specific needs.</h2>
	    <p style="font-size: 11pt">
	        Here the requirement is to compare time series continuous analogue values along with some digital inputs which are coming from different channels with irregular time intervals.
	        Look at the data format and how they are mapped with d3 for our specific needs.
	        <ul>
	            <li>Demonstrates how we can use d3's brush for zoom control over the shared x-axis without wasting sapce for a separate small chart for zoom control which most of chart componenet provides. </li>
	            <li>Shows how dynamic height adjustment as we add/remove new charts</li>
                <li>Shows how we can move charts up/down with smooth trnsitions with d3. This is one specific requirement that most chart components don't provide.</li>
	        </ul>
            
	    </p>
	</body>
</html>
